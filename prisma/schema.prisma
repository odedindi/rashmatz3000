generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

enum SupportedLocale {
  EN
  DE
  HE
}

model User {
  id             String          @id @default(uuid())
  name           String
  email          String          @unique
  password       String?
  image          String?
  createdAt      DateTime        @default(now())
  role           Role            @default(USER)
  selectedLocale SupportedLocale @default(EN)

  Task       Task[]
  SharedTask SharedTask[]
}

enum Role {
  ADMIN
  USER
  GUEST
}

model AllowedEmail {
  email     String   @unique
  createdAt DateTime @default(now())

  @@id([email])
  @@index([email])
}

model Task {
  id         String    @id @default(uuid())
  title      String
  content    String    @default("")
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  dueDate    DateTime?
  isComplete Boolean   @default(false)

  author     User         @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId   String
  SharedTask SharedTask[]
  favoriteUrls       String[]     @default([])
}

model SharedTask {
  task             Task   @relation(fields: [taskId], references: [id], onDelete: Cascade)
  taskId           String
  sharedWithUser   User   @relation(fields: [sharedWithUserId], references: [id], onDelete: Cascade)
  sharedWithUserId String

  @@id([taskId, sharedWithUserId])
  @@index([taskId, sharedWithUserId])
}
